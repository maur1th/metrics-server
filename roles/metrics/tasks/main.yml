---
# Docker volume setup
- name: check if volumes ({{', '.join(volumes)}}) exists
  command: docker volume inspect {{item}}
  register: result
  ignore_errors: yes
  changed_when: no
  with_items: "{{volumes}}"
- name: create volumes ({{', '.join(volumes)}})
  command: docker volume create {{item}}
  when: result is failed
  with_items: "{{volumes}}"

# Prometheus: configuration
- name: create host conf folder
  file:
    state: directory
    path: "{{metrics_folder}}"
- name: install prometheus conf
  template:
    src: prometheus.yml
    dest: "{{metrics_folder}}/"

# Prometheus: deployment
- name: stop prometheus container
  docker_container:
    name: prometheus
    state: absent
  ignore_errors: yes
  register: container_stop
  until: not container_stop.get("failed")
  retries: 5
  delay: 10
- name: start prometheus container
  docker_container:
    name: prometheus
    image: prom/prometheus:{{prometheus_version}}
    pull: yes
    state: started
    restart_policy: unless-stopped
    networks:
      - name: "{{project_name}}"
        aliases:
          - prometheus
    volumes:
      - "{{metrics_folder}}/prometheus.yml:/etc/prometheus/prometheus.yml:ro"
      - "{{metrics_folder}}/django.rules.yml:/etc/prometheus/django.rules.yml:ro"
      - "prometheus-storage:/prometheus"

# Grafana: deployment
- name: stop grafana container
  docker_container:
    name: grafana
    state: absent
  ignore_errors: yes
  register: container_stop
  until: not container_stop.get("failed")
  retries: 5
  delay: 10
- name: start grafana container
  docker_container:
    name: grafana
    image: grafana/grafana:{{grafana_version}}
    pull: yes
    state: started
    restart_policy: unless-stopped
    networks:
      - name: "{{project_name}}"
        aliases:
          - grafana
    env:
      GF_SECURITY_ADMIN_PASSWORD: "{{grafana_password}}"
      GF_SESSION_COOKIE_SECURE: true
      GF_SESSION_SESSION_LIFE_TIME: 31536000
    volumes:
      - "grafana-storage:/var/lib/grafana"
...
